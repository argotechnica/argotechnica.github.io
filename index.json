[{"authors":["admin"],"categories":null,"content":"üëã Hi! I‚Äôm a researcher, technologist, and writer focused on the social and economic aspects of artificial intelligence.\nI'm especially interested in the impact of information technologies on human learning and knowledge. For my Master's thesis, I studied emerging networks of production and distribution in higher education and lifelong learning. Basically, I used data science to study data science training in the United States. Kind of meta, eh?\nüß† I trace my passion for AI to its description (by Poole \u0026amp; Mackworth) as an ‚Äúexperimental philosophy‚Äù or ‚Äúcomputational epistemology.‚Äù\nAI can be a science of computational knowledge, as well as a computational science for studying knowledge. That makes my whole brain light up: both the social data science parts, and the science fiction parts.\nüëî Currently, I write about the business and management of AI for Element AI, a Canadian startup with a global footprint.\nPreviously, I‚Äôve worked in consulting, research, corporate learning, knowledge management, and IT. I've managed projects, teams, and IT systems; engineered data solutions with Python, SQL, and other tools; and conducted academic research using machine learning.\nüéì My alma mater is the Oxford Internet Institute, \u0026ldquo;a multidisciplinary research and teaching department of the University of Oxford, dedicated to the social science of the Internet.\u0026rdquo; I\u0026rsquo;m also an Antonian and a Gopher.\nAt Oxford, I studied statistics, scientometrics, digital ethnography, and agent-based modeling; assisted Bodleian Libraries with publishing scholarly data to Wikidata using SPARQL; won a funding competition for innovative educational technology; and worked as a researcher on a Google-funded study about the future of AI and lifelong learning.\n‚ú® I have a few other tricks up my sleeve, but you\u0026rsquo;ll have to join me on Twitter to find out more! I hope to see you there, or on the contact form below.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"http://corysalveson.com/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"üëã Hi! I‚Äôm a researcher, technologist, and writer focused on the social and economic aspects of artificial intelligence.\nI'm especially interested in the impact of information technologies on human learning and knowledge. For my Master's thesis, I studied emerging networks of production and distribution in higher education and lifelong learning. Basically, I used data science to study data science training in the United States. Kind of meta, eh?\nüß† I trace my passion for AI to its description (by Poole \u0026amp; Mackworth) as an ‚Äúexperimental philosophy‚Äù or ‚Äúcomputational epistemology.","tags":null,"title":"Cory Salveson","type":"authors"},{"authors":null,"categories":null,"content":"The Pew Research Center released a timely new report today, entitled The Future of Jobs and Jobs Training. Announced on their blog as \u0026ldquo;Experts on the Future of Work, Jobs Training and Skills,\u0026rdquo; the report features survey data and selected quotes from some of my personal heroes, including danah boyd, Cory Doctorow, and Richard Stallman. It also features a quote from me!\nWritten during my time as Learning Systems and Analytics Lead at RSM US, I wrote, \u0026ldquo;The nature of work today, and in future, is such that if people want to keep increasingly scarce well-paying jobs, they will need to educate themselves in an ongoing manner for their whole lives.\u0026rdquo; I stand by that comment, but thought I\u0026rsquo;d expand on it a bit here, as I did on Twitter.\nNamely, I\u0026rsquo;d like to add that although savvy workers can, and I think all workers eventually must, own their own lifelong learning; I firmly believe that the institutionalization of lifelong learning needs to be debated at a broader societal level, i.e. in terms of policy and funding.\nWhat do I mean by \u0026ldquo;institutionalization\u0026rdquo;? I like the definition set out by M√©nard \u0026amp; Shirley in their Handbook of New Institutional Economics (2008; emphasis mine):\n Institutions are the written and unwritten rules, norms and constraints that humans devise to reduce uncertainty and control their environment. These include (i) written rules and agreements that govern contractual relations and corporate governance, (ii) constitutions, laws and rules that govern politics, government, finance, and society more broadly, and (iii) unwritten codes of conduct, norms of behavior, and beliefs.\n For example, if lifelong learning shifts from optional to compulsory, who should pay for the time investment of individuals and educators? Some professions already require lifelong learning, such as healthcare and accounting; but many don\u0026rsquo;t. In either case, the proliferation of free or very cheap, easily accessible education online (this cheapness itself being a kind of unwritten rule of the MOOC marketplace) seems to be headed in the direction of pressuring workers to use their own time to pursue lifelong learning. Is that fair? Maybe it (almost) was in a world in which a degree obtained in your twenties carried you through an entire career, and jobs existed at multiple, lower levels of educuation that provided living wages; but when the nature of work is such that lifelong education and learning are compulsory, it seems more suspect.\nThe key, then, is that we must not endanger the dignity and rights of workers by failing to transition learning institutions to the new normal of work. As suggested above, my intuition is that simply making more low-cost training available, such as through Massive Open Online Courses (MOOCs), is not enough in this regard.\nOverall, these concerns are some of the many that inspire my Master\u0026rsquo;s thesis at the Oxford Internet Institute this year. In the thesis, I hope to explore new institutional arrangements within higher education, such as what new policies (like the above), formal and informal rules, and organizations or organizational forms are developing online. I hope to share more as I work over the coming months, but in the meantime, I have a slideshow here describing the thesis proposal, if you\u0026rsquo;re curious.\nAs always, please do let me know if you have any comments or questions‚Äîparticularly research suggestions! You can reach me via my contact info on this website (including my C.V., which is now posted here), or catch me on Twitter.\n","date":1494014400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1494014400,"objectID":"adbbaf2404db23fb39b952f0642d38d9","permalink":"http://corysalveson.com/post/future-of-work/","publishdate":"2017-05-05T20:00:00Z","relpermalink":"/post/future-of-work/","section":"post","summary":"Some comments expanding on my quote featured in the Pew Research Center report, [The Future of Jobs and Jobs Training](http://www.pewinternet.org/2017/05/03/the-future-of-jobs-and-jobs-training/).","tags":["learning","policy","thesis"],"title":"On Lifelong Learning and the Future of Work","type":"post"},{"authors":null,"categories":null,"content":" Background I ran Linux as my primary desktop for years, but now I find myself, as in a forest dark, running Windows 10. Bash on Ubuntu on Windows (BUW) is a commendable project, but it\u0026rsquo;s incomplete: BUW has a fully stocked /bin directory, for example, but ICMP is broken, so ping and traceroute don\u0026rsquo;t work. Some Python scripts also fail in ways unique to the BUW Linux environment. So, while I do hope the project goes on to get future updates, I need something a bit more powerful and flexible in the meantime.\nRunning a Linux virtual machine (VM) is my solution. Being a \u0026ldquo;real\u0026rdquo; Linux server, and one that I can fully control, it should be able to do anything I need for local (non-cloud) tasks. Meanwhile, the performance and resource costs of running a complete but lightweight VM, compared to BUW, are acceptable given the benefits. Unfortunately, support for things like mouse scrollback and clipboard sharing don\u0026rsquo;t work in VirtualBox (the free virtualization platform I prefer) when the guest is just a shell. I\u0026rsquo;ve also fallen in love with cmder, a persistent drop-down console environment that supports arbitrary shells, that I use constantly. Having to switch to a special, dedicated window for running commands on the VM is nearly a deal-breaker.\nRunning a headless VM (i.e. no display, real or virtual, attached), to which I can SSH from a shell in cmder, is therefore my ideal setup, with one key problem left to sort out: how to secure command-line SSH access to the Linux VM without BUW (which this effort undertakes to eliminate). Cygwin, \u0026ldquo;a distribution of popular GNU and other Open Source tools running on Microsoft Windows,\u0026rdquo; solves this problem while also providing additional benefits. So, starting from a setup where I was previously running a Windows command prompt as well as BUW in Cmder; with the occasional manual bootup of a VirtualBox VM in a separate window; I now have just one shell in Cmder provided by Cygwin, and‚Äîwith help from a shell script I\u0026rsquo;m calling \u0026ldquo;Ubik\u0026rdquo;‚Äîan easy to use, \u0026ldquo;real\u0026rdquo; Linux server for when I need it, all in the same Cmder window.\nSetup Cmder is a big deal to me, but not required for the basic approach taken here, so I\u0026rsquo;ve listed it in the \u0026ldquo;Optional Steps\u0026rdquo; below.\nPrerequisites Setting this up requires a recent version of Windows (I\u0026rsquo;m on Windows 10) and a basic level of comfort with Linux and virtual machine management concepts. For example, I don\u0026rsquo;t detail how to install the software below; rather, I show how to configure everything to work nicely together. If there\u0026rsquo;s demand for a more step-by-step intro to this content, I\u0026rsquo;d be happy to put something together‚Äîjust let me know!\nRequired software (versions I used listed for reference)  VirtualBox - v5.1.18 Linux virtual machine on VirtualBox - Ubuntu Server 16.04.2 LTS Cygwin - 64-bit version  Optional software  Cmder - v161206 stable  Step 1: Configure port forwarding on the Linux VM This enables SSH access to the VM.\n Shut down and close the VM if it isn\u0026rsquo;t closed already. Open up the Settings panel for the VM, navigating to Settings \u0026gt; Network. In the \u0026ldquo;Attached to:\u0026rdquo; dropdown, select NAT if not already selected. Expand the Advanced section, then click on Port Forwarding to open the Port Forwarding Rules dialog. Add a new port forwarding rule. Give it a handy name (\u0026ldquo;ssh\u0026rdquo;), leave Protocol set to \u0026ldquo;TCP\u0026rdquo;, leave Host IP blank, assign a Host Port (I\u0026rsquo;m using 3022), leave Guest IP blank, and set Guest Port to 22. Alternatively, you can accomplish this via command-line like so (my VM\u0026rsquo;s name is \u0026ldquo;Ubuntu\u0026rdquo;):\nVBoxManage modifyvm Ubuntu --natpf1 \u0026quot;ssh,tcp,,3022,,22\u0026quot;   Step 2: Streamline launch and login of the Linux VM VirtualBox understands the concept of running a \u0026ldquo;headless\u0026rdquo; server, i.e. running the machine without a (virtual) monitor attached, and this can be controlled via command-line as follows (my machine name is \u0026ldquo;Ubuntu\u0026rdquo;):\nVBoxManage startvm Ubuntu --type headless  You can also stop a VM with the \u0026ldquo;save state\u0026rdquo; option via command-line; this is a feature for similar to putting your laptop to sleep by closing the lid, in which the machine state is saved in a snapshot:\nVBoxManage controlvm Ubuntu savestate  To streamline this process, I\u0026rsquo;ve created a shell script I call ubik after Philip K. Dick\u0026rsquo;s novel of the same name. In the novel, the main character comes to question whether his reality is simulated or real after a series of distortions and other events. A product called Ubik, distributed in an aerosol can, is a mysterious substance that he and other characters discover to help stabilize the boundaries between different realities. Riffing on this idea, the shell script first checks which \u0026ldquo;reality\u0026rdquo; it\u0026rsquo;s running from (whether it\u0026rsquo;s being run from the guest or host), then transitions the user to the other one, starting or stopping the VM as needed and tidying up after itself. You can download it from GitHub here: https://github.com/argotechnica/ubik.\nHere\u0026rsquo;s some example usage of ubik:\nCory@LYRETOME /cygdrive/c/CMD $ ubik Ubik ... Safe when taken as directed. Waiting for VM \u0026quot;Ubuntu\u0026quot; to power on... VM \u0026quot;Ubuntu\u0026quot; has been successfully started. Attempting to SSH to VM \u0026quot;Ubuntu\u0026quot;... Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-71-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 0 packages can be updated. 0 updates are security updates. Last login: Fri Apr 7 13:10:18 2017 from 10.0.2.2 cory@ubuntu:~$ ./ubik Connection to localhost closed. Return the VM to cryonic suspension? y 0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100% Cory@LYRETOME /cygdrive/c/CMD $  If you put a copy of this script into your Cygwin and VM home users\u0026rsquo; PATH directories; grant execution permission to the script with chmod +x ubik; and edit the script to incorporate your relevant parameters, you can just type ubik from the command line, and it\u0026rsquo;ll take care of the rest.\nOptional Steps Configure Cmder with Cygwin If a drop-down console sounds appealing to you, install Cmder and then check out this guide for instructions on configuring Cygwin with ConEmu, the upstream project from which Cmder is built: https://github.com/nadav-dav/Cygwin-guide. Note that the author says to use the path C:\\cygwin\\Cygwin.bat, but your path may actually be c:\\cygwin64\\Cygwin.bat if you installed the 64-bit version of Cygwin.\nConfigure key-based SSH authentication This saves you from having to type passwords all the time. Canonical maintains a good writeup here. Essentially, in Cygwin, you can just do this:\nmkdir ~/.ssh chmod 700 ~/.ssh ssh-keygen -t rsa  Press \u0026ldquo;Enter\u0026rdquo; for every option to get a key that doesn\u0026rsquo;t require a passphrase. Then, copy the content from one of the resulting files, id_rsa.pub, into another file, authorized_keys, located on the VM. You can do this in one command (changing your port, username, and hostname as needed) like this:\ncat ~/.ssh/id_rsa.pub | ssh -p 3022 cory@localhost \u0026quot;cat \u0026gt;\u0026gt; ~/.ssh/ authorized_keys\u0026quot;  You should be prompted for the password of the destination user account on the virtual machine for this command, but if it worked correctly, you shouldn\u0026rsquo;t have to enter a password to SSH ever again.\nStart Cmder automatically with Windows Create a shortcut to the Cmder executable and put the shortcut in your Startup folder in the Start Menu. Anything placed in this folder starts automatically when your computer boots up. Windows has worked like this for years, but for some reason the folder is hidden in Windows 10. Here\u0026rsquo;s the full path, so you don\u0026rsquo;t have to hunt for it:\n%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup  Discussion Over the years, I\u0026rsquo;ve found that investing a few hours in optimizing my tech setup pays for itself many times over in future efficiencies‚Äîand opens the door for more creativity. (When I know the cost of doing x is just a few seconds and an easy-to-use command, rather than an unknown number of minutes and a memory exercise, I\u0026rsquo;m more likely to experiment with x.) In that spirit, the method proposed here sought to balance the best of three approaches for bringing Linux into Windows: the lightweight, compiled-for-Windows tools of Cygwin, the power of a \u0026ldquo;real\u0026rdquo; (virtual) Linux server, and (optionally) a fancy console interface called Cmder‚Äîwith a bit of ubik to help it all gel.\nReferences  https://askubuntu.com/questions/307677/constantly-check-if-the-virtualbox-is-started-or-still-booting-up-from-a-script https://en.wikipedia.org/wiki/Ubik https://github.com/nadav-dav/Cygwin-guide https://schier.co/blog/2013/03/13/start-virtualbox-vm-in-headless-mode.html https://stackoverflow.com/questions/5906441/how-to-ssh-to-a-virtualbox-guest-externally-through-a-host  ","date":1491591600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1491591600,"objectID":"85efeb4869b6a1419b5375fc81b9e4b7","permalink":"http://corysalveson.com/post/headless-with-ubik/","publishdate":"2017-04-07T19:00:00Z","relpermalink":"/post/headless-with-ubik/","section":"post","summary":"How and why I switched from [Bash on Ubuntu on Windows](https://msdn.microsoft.com/en-gb/commandline/wsl/faq) to Cygwin and VirtualBox with help from Philip K. Dick. A technical and philosophical post about my approach to Linux tooling on Windows.","tags":["technical","tools"],"title":"Running headless Ubuntu Server on Windows 10 with Cygwin, cmder, and Ubik","type":"post"}]